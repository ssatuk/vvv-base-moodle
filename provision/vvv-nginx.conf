################################################################
# nginx configuration for moodle
#
################################################################

# http://{wp_main_host} - this server configuration is
# setup to listen on port 80 for any requests coming in to
# {wp_main_host} and use the {vvv_path_to_site}/htdocs directory
# to serve them.
server {
    listen       80;
    listen       443 ssl;
    server_name  ;
    root         {vvv_path_to_site}/htdocs;

    error_log    {vvv_path_to_site}/log/error.log;
    access_log   {vvv_path_to_site}/log/access.log;

    set          $upstream {upstream};

    charset utf-8;

    # Serve root of site
    location / {
        index index.php index.html;
        try_files $uri $uri/ /index.php$is_args$args;
    }

    # Moodle slash arguments
    # https://docs.moodle.org/34/en/Nginx
    # https://docs.moodle.org/34/en/Using_slash_arguments 

    location ~ [^/]\.php(/|$) {
        fastcgi_split_path_info  ^(.+\.php)(/.+)$;

        include                  fastcgi_params;

        fastcgi_param   PATH_INFO       $fastcgi_path_info;

        # The amount of time for upstream to wait for a fastcgi process to send data.
        # We keep this *extremely* high so that one can be lazy when remote debugging.
        fastcgi_read_timeout 3600s;

        # Buffer size for reading the header of the backend FastCGI process.
        # This defaults to the value of a single fastcgi_buffers, so does not
        # need to be specified in our case, but it's good to be explicit.
        fastcgi_buffer_size 128k;

        # The number and size of the buffers into which the reply from the FastCGI
        # process in the backend is read.
        #
        # 4 buffers at 128k means that any reply by FastCGI greater than 512k goes
        # to disk and replies under 512k are handled directly in memory.
        fastcgi_buffers 4 128k;

        # SCRIPT_FILENAME is a required parameter for things to work properly,
        # but was missing in the default fastcgi_params on upgrade to nginx 1.4.
        # We define it here to be sure that it exists.
        fastcgi_param   SCRIPT_FILENAME         $document_root$fastcgi_script_name;

        # Use the upstream defined in the upstream variable.
        fastcgi_pass   $upstream;

        # And get to serving the file!
        fastcgi_index  index.php;
    }

    # this prevents hidden files (beginning with a period) from being served
    location ~ /\. {
        access_log off;
        log_not_found off;
        deny all;
    }

}


